{"name":"usno-transit","tagline":"Consumes USNO resources to return times of rise, set, and transit for the major solar system bodies and selected bright stars.","body":"# USNO::Transit [![Code Climate](https://codeclimate.com/github/rthbound/usno-transit.png)](https://codeclimate.com/github/rthbound/usno-transit)[![Coverage Status](https://coveralls.io/repos/rthbound/usno-transit/badge.png)](https://coveralls.io/r/rthbound/usno-transit)[![Build Status](https://travis-ci.org/rthbound/usno-transit.png?branch=master)](https://travis-ci.org/rthbound/usno-transit)\r\n\r\nThis project now supports USNO Rise/Set/Transit Form B (Locations Worldwide). Notes on usage can be found below.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'usno-transit'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install usno-transit\r\n\r\n## Usage (US Locations)\r\n\r\n```ruby\r\nrequire \"usno/transit\"\r\n\r\nUSNO::Transit::Sun.new(city: \"Birmingham\", state: \"AL\").call.data\r\n```\r\n\r\nthe output of the above call will look something like the following\r\n\r\n```html\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n<title>Rise/Set/Transit Table</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n</head>\r\n<body>\r\n<pre>\r\n                                     Sun                                     \r\n     \r\n                             BIRMINGHAM, ALABAMA                             \r\n              Location:  W 86°48'36.0\", N33°31'48.0\",     0m               \r\n                 (Longitude referred to Greenwich meridian)                  \r\n     \r\n                    Time Zone:  6h 00m west of Greenwich                     \r\n     \r\n      Date         Begin      Rise  Az.   Transit Alt.    Set  Az.     End\r\n     (Zone)        Civil                                              Civil  \r\n                  Twilight                                           Twilight\r\n                     h  m     h  m   °      h  m  °       h  m   °      h  m\r\n2013 Nov 17 (Sun)   05:54    06:21 113     11:32 37S     16:43 247     17:10      \r\n2013 Nov 18 (Mon)   05:55    06:22 113     11:33 37S     16:43 247     17:09      \r\n2013 Nov 19 (Tue)   05:56    06:23 113     11:33 37S     16:42 247     17:09      \r\n2013 Nov 20 (Wed)   05:57    06:24 113     11:33 37S     16:42 247     17:09      \r\n2013 Nov 21 (Thu)   05:58    06:25 114     11:33 36S     16:42 246     17:08      \r\n\r\n</pre>\r\n<p><a href=\"javascript:history.go(-1)\">Back to form</a></p>\r\n</body>\r\n</html>\r\n```\r\n\r\n## Usage (US Locations)\r\n\r\n```ruby\r\nrequire \"usno/transit\"\r\n\r\n# Just override the default :request_class options and provide a longitude/latitude\r\n# For a more precise location, you can provide :long_minutes, :lat_minutes,\r\n#   :long_seconds, and :lat_seconds\r\nUSNO::Transit::Sun.new(lat: 0, long: 0, request_class: USNO::Transit::WorldwideRequest).call.data\r\n```\r\n\r\nThe output from the above command should return something like the following\r\n\r\n```html\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n<title>Rise/Set/Transit Table</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n</head>\r\n<body>\r\n<pre>\r\n                                     Sun                                     \r\n     \r\n\r\n              Location:     0°00'00.0\",   0°00'00.0\",     0m               \r\n                 (Longitude referred to Greenwich meridian)                  \r\n     \r\n                            Time Zone: Greenwich                             \r\n     \r\n      Date         Begin      Rise  Az.   Transit Alt.    Set  Az.     End\r\n     (Zone)        Civil                                              Civil  \r\n                  Twilight                                           Twilight\r\n                     h  m     h  m   °      h  m  °       h  m   °      h  m\r\n2013 Nov 24 (Sun)   05:21    05:43 111     11:47 69S     17:50 249     18:12      \r\n2013 Nov 25 (Mon)   05:21    05:43 111     11:47 69S     17:51 249     18:13      \r\n2013 Nov 26 (Tue)   05:22    05:44 111     11:47 69S     17:51 249     18:13      \r\n2013 Nov 27 (Wed)   05:22    05:44 111     11:48 69S     17:51 249     18:14      \r\n2013 Nov 28 (Thu)   05:22    05:44 111     11:48 69S     17:52 249     18:14      \r\n\r\n</pre>\r\n<p><a href=\"javascript:history.go(-1)\">Back to form</a></p>\r\n</body>\r\n</html>\r\n```\r\n\r\n## Other USNO libraries\r\n\r\n[usno-imagery](http://github.com/rthbound/usno-transit) builds URLs for consuming USNO's imagery data services. These services provide synthetic views of earth and other selected solar system bodies.\r\n\r\n## Contributing\r\n\r\nIf anyone wants to have a go at parsing the text/html output into JSON and/or CSV format (for graphing purposes), have at it! If not, I'll get to it soon enough :)\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/rthbound/usno-transit/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n","google":"UA-41441385-1","note":"Don't delete this file! It's used internally to help with page regeneration."}